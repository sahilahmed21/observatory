// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String    @id @default(cuid())
  email     String    @unique
  password  String    
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
  projects   Project[]
}
model Project {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  apiKeys   ApiKey[]
  metrics   Metric[]
  alertRules AlertRule[]

}
model ApiKey {
  id          String   @id @default(cuid())
  key         String   @unique
  createdAt   DateTime @default(now())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
}

model Metric {
  id           String   @id @default(cuid())
  timestamp    DateTime @default(now())
  endpoint     String
  responseTime Int      // in milliseconds
  statusCode   Int
  projectId    String
  project      Project  @relation(fields: [projectId], references: [id])
}

model AlertRule {
  id             String    @id @default(cuid())
  projectId      String
  project        Project   @relation(fields: [projectId], references: [id])
  name           String
  metric         String // e.g., "latency" or "status_code"
  threshold      Int      // e.g., 500 (for ms) or 500 (for status code)
  operator       String   // e.g., ">" or "=="
  endpointFilter String?  // Optional: e.g., "/api/users"
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  events         AlertEvent[]
}

model AlertEvent {
  id        String    @id @default(cuid())
  ruleId    String
  rule      AlertRule @relation(fields: [ruleId], references: [id])
  timestamp DateTime  @default(now())
  details   Json      // Store details about the trigger
}
